name: CI

on: [push, pull_request]

jobs:
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: lumaxis/shellcheck-problem-matchers@v1
        with:
          format: gcc
      - name: Run ShellCheck
        run: |
          set -o pipefail
          find . -name '*.sh' |
          xargs shellcheck --format gcc --shell=bash \
            config/zsh/{.zprofile,.zshrc} \
            zshenv |
          # Replace the severity so that the problem matcher can understand it.
          # <https://github.com/actions/toolkit/blob/f90a2dc/docs/problem-matchers.md#single-line-matchers>
          sed -E 's/^(.+):([0-9]+): (note|style): (.+)$/\1:\2: \3: \4\n\1:\2: warning: \4/g'
  stylua:
    name: Format Lua scripts with StyLua
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: JohnnyMorganz/stylua-action@1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --check .
          version: '^0.12'
  selene:
    name: Lint Lua scripts with selene
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: NTBBloodbath/selene-action@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --quiet .
  vint:
    name: Lint Vim scripts with Vint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install vim-vint
      - run: |
          # Exclude files that use newer syntaxes which Vint does not recognize.
          find . \( -type f ! -path ./config/nvim/autoload/init/filetype/rust.vim ! -path ./config/nvim/ftplugin/markdown.vim -name '*.vim' -or -name vimrc \) \
            -exec vint --warning --verbose {} +
